plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'application'
}

apply plugin: 'java'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //Lombok and logging
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'ch.qos.logback:logback-core:1.4.14'
	
    implementation 'de.labathome:Cubature:1.0.5'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //python functionality in java.
    //Option 1: use nd4j-native-platform (excessive dependency tree)
    ////implementation "org.nd4j:nd4j-native-platform:1.0.0-M2"
    //Option 2: use platform specific libraries
    //Use windows-x86_64, linux-x86_64 or macosx-x86_64 accordingly
    //implementation 'org.nd4j:nd4j-common:1.0.0-M2'
    //implementation 'org.nd4j:nd4j-api:1.0.0-M2'

    //implementation 'org.nd4j:nd4j-native:1.0.0-M2'
    //implementation 'org.nd4j:nd4j-native:1.0.0-M2:windows-x86_64'
    //implementation 'org.bytedeco:openblas:0.3.19-1.5.7'
    //implementation 'org.bytedeco:openblas:0.3.19-1.5.7:windows-x86_64'

    //implementation 'net.sf.py4j:py4j:0.10.9.5'

    // Use JUnit Jupiter for testing.
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
        exceptionFormat = "full"
        showCauses = true
        showExceptions = true
        showStackTraces = true
        events = ["passed", "skipped", "failed", "standardOut", "standardError"]
    }
}

configurations.implementation.setCanBeResolved(true)

jar {
//  manifest { 
//    attributes "Main-Class": "vkmbox.classifier.Py4jStarter"
//  }

  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  from {
    configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
  }
}
